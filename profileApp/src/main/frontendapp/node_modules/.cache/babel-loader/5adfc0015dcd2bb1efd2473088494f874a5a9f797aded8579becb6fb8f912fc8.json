{"ast":null,"code":"var _jsxFileName = \"/home/yoshintm/React/react-type-script-webapp/src/components/pages/EmployeeInfoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from \"react\";\nimport { memo } from \"react\";\nimport { Center, Spinner, Wrap, WrapItem, useDisclosure } from \"@chakra-ui/react\";\nimport { EmployeeCard } from \"../organisms/employee/EmployeeCard\";\nimport { useAllEmployees } from \"../../hooks/useAllEmployees\";\nimport { useSelectEmployee } from \"../../hooks/useSelectEmployee\";\nimport { HeaderOnly } from \"../templates/layout/HeaderOnly\";\nimport { EmployeeDetailModal } from \"../organisms/employee/EmployeeDetailModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EmployeeInfoList = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const {\n    isOpen,\n    onClose,\n    onOpen\n  } = useDisclosure();\n  const {\n    getEmployees,\n    employees,\n    loading\n  } = useAllEmployees();\n  const {\n    onSelectEmployee,\n    selectedEmployee\n  } = useSelectEmployee();\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  const onClickEmployee = useCallback(id => {\n    onSelectEmployee({\n      id,\n      employees,\n      onOpen\n    });\n  }, [employees]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderOnly, {\n      children: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Wrap, {\n      p: {\n        base: 4,\n        md: 10\n      },\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(WrapItem, {\n        mx: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(EmployeeCard, {\n          id: employee.id,\n          image: employee.image != null ? employee.image : \"http://source.unsplash.com/random\",\n          employeeName: employee.employeeName,\n          fullName: employee.employeeFullName,\n          onClick: onClickEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, employee.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeDetailModal, {\n      employee: selectedEmployee,\n      isOpen: isOpen,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"WosjGapC04xj0x9dtRzhCbwWo+g=\", false, function () {\n  return [useDisclosure, useAllEmployees, useSelectEmployee];\n})), \"WosjGapC04xj0x9dtRzhCbwWo+g=\", false, function () {\n  return [useDisclosure, useAllEmployees, useSelectEmployee];\n});\n_c2 = EmployeeInfoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"EmployeeInfoList$memo\");\n$RefreshReg$(_c2, \"EmployeeInfoList\");","map":{"version":3,"names":["React","useCallback","useEffect","memo","Center","Spinner","Wrap","WrapItem","useDisclosure","EmployeeCard","useAllEmployees","useSelectEmployee","HeaderOnly","EmployeeDetailModal","jsxDEV","_jsxDEV","Fragment","_Fragment","EmployeeInfoList","_s","_c","isOpen","onClose","onOpen","getEmployees","employees","loading","onSelectEmployee","selectedEmployee","onClickEmployee","id","children","fileName","_jsxFileName","lineNumber","columnNumber","p","base","md","map","employee","mx","image","employeeName","fullName","employeeFullName","onClick","_c2","$RefreshReg$"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/components/pages/EmployeeInfoList.tsx"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport { FC, memo } from \"react\";\r\nimport {\r\n  Center,\r\n  Spinner,\r\n  Wrap,\r\n  WrapItem,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { EmployeeCard } from \"../organisms/employee/EmployeeCard\";\r\nimport { useAllEmployees } from \"../../hooks/useAllEmployees\";\r\nimport { useSelectEmployee } from \"../../hooks/useSelectEmployee\";\r\nimport { HeaderOnly } from \"../templates/layout/HeaderOnly\";\r\nimport { EmployeeDetailModal } from \"../organisms/employee/EmployeeDetailModal\";\r\n\r\nexport const EmployeeInfoList: FC = memo(() => {\r\n  const { isOpen, onClose, onOpen } = useDisclosure();\r\n  const { getEmployees, employees, loading } = useAllEmployees();\r\n  const { onSelectEmployee, selectedEmployee } = useSelectEmployee();\r\n\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, []);\r\n\r\n  const onClickEmployee = useCallback(\r\n    (id: number) => {\r\n      onSelectEmployee({ id, employees, onOpen });\r\n    },\r\n    [employees]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <HeaderOnly children={\"\"} />\r\n      {loading ? (\r\n        <Center>\r\n          <Spinner />\r\n        </Center>\r\n      ) : (\r\n        <Wrap p={{ base: 4, md: 10 }}>\r\n          {employees.map((employee) => (\r\n            <WrapItem key={employee.id} mx={\"auto\"}>\r\n              <EmployeeCard\r\n                id={employee.id}\r\n                image={\r\n                  employee.image != null\r\n                    ? employee.image\r\n                    : \"http://source.unsplash.com/random\"\r\n                }\r\n                employeeName={employee.employeeName}\r\n                fullName={employee.employeeFullName}\r\n                onClick={onClickEmployee}\r\n              />\r\n            </WrapItem>\r\n          ))}\r\n        </Wrap>\r\n      )}\r\n      <EmployeeDetailModal\r\n        employee={selectedEmployee}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      />\r\n    </>\r\n  );\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}