{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMessage } from \"./useMessage\";\nimport { EmployeeState, EmployeeAdminState } from \"../contexts/EmployeeState\";\nimport { useRecoilState } from \"recoil\";\nimport { AuthProvider } from \"../contexts/AuthProvider\";\n/**\r\n * ログイン情報を受け取り、ログイン判定結果を返すカスタムフック\r\n * @returns login:ログイン処理関数 loading:処理中判定\r\n */\nexport const useLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    showMessage\n  } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\n  const [authProvider, setAuthProvider] = useRecoilState(AuthProvider);\n  const [employeeAdminState, setEmployeeAdminState] = useRecoilState(EmployeeAdminState);\n  const login = useCallback(async props => {\n    const {\n      employeeId,\n      password\n    } = props;\n    setLoading(true);\n    await axios.post(\"/api/login\", {\n      employeeId: employeeId,\n      password: password\n    }).then(res => {\n      //ログイン\n      setEmployeeState(employeeId); //社員IDを保持しておく\n      setEmployeeAdminState(res.data); //管理者判定結果を保持しておく\n      showMessage({\n        title: \"ログインしました\",\n        status: \"success\"\n      });\n      setAuthProvider(true);\n      navigate(\"/home\");\n    }).catch(e => {\n      showMessage({\n        title: \"ユーザーが見つかりません\",\n        status: \"error\"\n      });\n      setLoading(false);\n      setAuthProvider(true);\n      navigate(\"/home\");\n    });\n  }, []);\n  return {\n    login,\n    loading\n  };\n};\n_s(useLogin, \"smKU+W6zsGepe5o1S9qe1Gyc+I8=\", false, function () {\n  return [useNavigate, useMessage, useRecoilState, useRecoilState, useRecoilState];\n});","map":{"version":3,"names":["axios","useCallback","useState","useNavigate","useMessage","EmployeeState","EmployeeAdminState","useRecoilState","AuthProvider","useLogin","_s","navigate","showMessage","loading","setLoading","employeeState","setEmployeeState","authProvider","setAuthProvider","employeeAdminState","setEmployeeAdminState","login","props","employeeId","password","post","then","res","data","title","status","catch","e"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useLogin.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMessage } from \"./useMessage\";\r\nimport { EmployeeState, EmployeeAdminState } from \"../contexts/EmployeeState\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { AuthProvider } from \"../contexts/AuthProvider\";\r\n\r\ntype Props = {\r\n  employeeId: string;\r\n  password: string;\r\n};\r\n\r\n/**\r\n * ログイン情報を受け取り、ログイン判定結果を返すカスタムフック\r\n * @returns login:ログイン処理関数 loading:処理中判定\r\n */\r\nexport const useLogin = () => {\r\n  const navigate = useNavigate();\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\r\n  const [authProvider, setAuthProvider] = useRecoilState(AuthProvider);\r\n  const [employeeAdminState, setEmployeeAdminState] =\r\n    useRecoilState(EmployeeAdminState);\r\n\r\n  const login = useCallback(async (props: Props) => {\r\n    const { employeeId, password } = props;\r\n    setLoading(true);\r\n    await axios\r\n      .post(\"/api/login\", {\r\n        employeeId: employeeId,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        //ログイン\r\n        setEmployeeState(employeeId); //社員IDを保持しておく\r\n        setEmployeeAdminState(res.data); //管理者判定結果を保持しておく\r\n        showMessage({ title: \"ログインしました\", status: \"success\" });\r\n        setAuthProvider(true);\r\n        navigate(\"/home\");\r\n      })\r\n      .catch((e) => {\r\n        showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" });\r\n        setLoading(false);\r\n        setAuthProvider(true);\r\n        navigate(\"/home\");\r\n      });\r\n  }, []);\r\n\r\n  return { login, loading };\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,aAAa,EAAEC,kBAAkB,QAAQ,2BAA2B;AAC7E,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,YAAY,QAAQ,0BAA0B;AAOvD;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAY,CAAC,GAAGR,UAAU,CAAC,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,cAAc,CAACF,aAAa,CAAC;EACvE,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGX,cAAc,CAACC,YAAY,CAAC;EACpE,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAC/Cb,cAAc,CAACD,kBAAkB,CAAC;EAEpC,MAAMe,KAAK,GAAGpB,WAAW,CAAC,MAAOqB,KAAY,IAAK;IAChD,MAAM;MAAEC,UAAU;MAAEC;IAAS,CAAC,GAAGF,KAAK;IACtCR,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMd,KAAK,CACRyB,IAAI,CAAC,YAAY,EAAE;MAClBF,UAAU,EAAEA,UAAU;MACtBC,QAAQ,EAAEA;IACZ,CAAC,CAAC,CACDE,IAAI,CAAEC,GAAG,IAAK;MACb;MACAX,gBAAgB,CAACO,UAAU,CAAC,CAAC,CAAC;MAC9BH,qBAAqB,CAACO,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;MACjChB,WAAW,CAAC;QAAEiB,KAAK,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;MACrDZ,eAAe,CAAC,IAAI,CAAC;MACrBP,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,CACDoB,KAAK,CAAEC,CAAC,IAAK;MACZpB,WAAW,CAAC;QAAEiB,KAAK,EAAE,cAAc;QAAEC,MAAM,EAAE;MAAQ,CAAC,CAAC;MACvDhB,UAAU,CAAC,KAAK,CAAC;MACjBI,eAAe,CAAC,IAAI,CAAC;MACrBP,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEU,KAAK;IAAER;EAAQ,CAAC;AAC3B,CAAC;AAACH,EAAA,CAlCWD,QAAQ;EAAA,QACFN,WAAW,EACJC,UAAU,EAEQG,cAAc,EAChBA,cAAc,EAEpDA,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}