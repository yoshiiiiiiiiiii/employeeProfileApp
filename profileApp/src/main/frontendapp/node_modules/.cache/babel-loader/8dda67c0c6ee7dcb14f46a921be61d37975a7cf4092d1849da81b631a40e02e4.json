{"ast":null,"code":"import axios from\"axios\";import{useCallback,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{useMessage}from\"./useMessage\";import{EmployeeState,EmployeeAdminState}from\"../contexts/EmployeeState\";import{useRecoilState}from\"recoil\";import{AuthProvider}from\"../contexts/AuthProvider\";/**\r\n * ログイン情報を受け取り、ログイン判定結果を返す関数\r\n * @returns login:ログイン処理関数 loading:処理中判定\r\n */export const useLogin=()=>{const navigate=useNavigate();const{showMessage}=useMessage();const[loading,setLoading]=useState(false);const[employeeState,setEmployeeState]=useRecoilState(EmployeeState);const[authProvider,setAuthProvider]=useRecoilState(AuthProvider);const[employeeAdminState,setEmployeeAdminState]=useRecoilState(EmployeeAdminState);const login=useCallback(async props=>{const{employeeId,password}=props;setLoading(true);await axios.post(\"/api/login\",{employeeId:employeeId,password:password}).then(res=>{//ログイン\nsetEmployeeState(employeeId);//社員IDを保持しておく\nsetEmployeeAdminState(res.data);//管理者判定結果を保持しておく\nshowMessage({title:\"ログインしました\",status:\"success\"});setAuthProvider(true);navigate(\"/home\");}).catch(e=>{showMessage({title:\"ユーザーが見つかりません\",status:\"error\"});setLoading(false);setAuthProvider(true);navigate(\"/home\");});},[]);return{login,loading};};","map":{"version":3,"names":["axios","useCallback","useState","useNavigate","useMessage","EmployeeState","EmployeeAdminState","useRecoilState","AuthProvider","useLogin","navigate","showMessage","loading","setLoading","employeeState","setEmployeeState","authProvider","setAuthProvider","employeeAdminState","setEmployeeAdminState","login","props","employeeId","password","post","then","res","data","title","status","catch","e"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useLogin.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMessage } from \"./useMessage\";\r\nimport { EmployeeState, EmployeeAdminState } from \"../contexts/EmployeeState\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { AuthProvider } from \"../contexts/AuthProvider\";\r\n\r\ntype Props = {\r\n  employeeId: string;\r\n  password: string;\r\n};\r\n\r\n/**\r\n * ログイン情報を受け取り、ログイン判定結果を返す関数\r\n * @returns login:ログイン処理関数 loading:処理中判定\r\n */\r\nexport const useLogin = () => {\r\n  const navigate = useNavigate();\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\r\n  const [authProvider, setAuthProvider] = useRecoilState(AuthProvider);\r\n  const [employeeAdminState, setEmployeeAdminState] =\r\n    useRecoilState(EmployeeAdminState);\r\n\r\n  const login = useCallback(async (props: Props) => {\r\n    const { employeeId, password } = props;\r\n    setLoading(true);\r\n    await axios\r\n      .post(\"/api/login\", {\r\n        employeeId: employeeId,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        //ログイン\r\n        setEmployeeState(employeeId); //社員IDを保持しておく\r\n        setEmployeeAdminState(res.data); //管理者判定結果を保持しておく\r\n        showMessage({ title: \"ログインしました\", status: \"success\" });\r\n        setAuthProvider(true);\r\n        navigate(\"/home\");\r\n      })\r\n      .catch((e) => {\r\n        showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" });\r\n        setLoading(false);\r\n        setAuthProvider(true);\r\n        navigate(\"/home\");\r\n      });\r\n  }, []);\r\n\r\n  return { login, loading };\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CAC7C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,UAAU,KAAQ,cAAc,CACzC,OAASC,aAAa,CAAEC,kBAAkB,KAAQ,2BAA2B,CAC7E,OAASC,cAAc,KAAQ,QAAQ,CACvC,OAASC,YAAY,KAAQ,0BAA0B,CAOvD;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEQ,WAAY,CAAC,CAAGP,UAAU,CAAC,CAAC,CACpC,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACY,aAAa,CAAEC,gBAAgB,CAAC,CAAGR,cAAc,CAACF,aAAa,CAAC,CACvE,KAAM,CAACW,YAAY,CAAEC,eAAe,CAAC,CAAGV,cAAc,CAACC,YAAY,CAAC,CACpE,KAAM,CAACU,kBAAkB,CAAEC,qBAAqB,CAAC,CAC/CZ,cAAc,CAACD,kBAAkB,CAAC,CAEpC,KAAM,CAAAc,KAAK,CAAGnB,WAAW,CAAC,KAAO,CAAAoB,KAAY,EAAK,CAChD,KAAM,CAAEC,UAAU,CAAEC,QAAS,CAAC,CAAGF,KAAK,CACtCR,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAb,KAAK,CACRwB,IAAI,CAAC,YAAY,CAAE,CAClBF,UAAU,CAAEA,UAAU,CACtBC,QAAQ,CAAEA,QACZ,CAAC,CAAC,CACDE,IAAI,CAAEC,GAAG,EAAK,CACb;AACAX,gBAAgB,CAACO,UAAU,CAAC,CAAE;AAC9BH,qBAAqB,CAACO,GAAG,CAACC,IAAI,CAAC,CAAE;AACjChB,WAAW,CAAC,CAAEiB,KAAK,CAAE,UAAU,CAAEC,MAAM,CAAE,SAAU,CAAC,CAAC,CACrDZ,eAAe,CAAC,IAAI,CAAC,CACrBP,QAAQ,CAAC,OAAO,CAAC,CACnB,CAAC,CAAC,CACDoB,KAAK,CAAEC,CAAC,EAAK,CACZpB,WAAW,CAAC,CAAEiB,KAAK,CAAE,cAAc,CAAEC,MAAM,CAAE,OAAQ,CAAC,CAAC,CACvDhB,UAAU,CAAC,KAAK,CAAC,CACjBI,eAAe,CAAC,IAAI,CAAC,CACrBP,QAAQ,CAAC,OAAO,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEU,KAAK,CAAER,OAAQ,CAAC,CAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}