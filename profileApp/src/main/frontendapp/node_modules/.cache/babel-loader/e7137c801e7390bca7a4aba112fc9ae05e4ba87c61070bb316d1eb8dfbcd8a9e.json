{"ast":null,"code":"var _jsxFileName = \"/home/yoshintm/React/react-type-script-webapp/src/components/pages/EmployeeInfoList.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect } from \"react\";\nimport { memo } from \"react\";\nimport { Center, Spinner, Wrap, WrapItem, useDisclosure } from \"@chakra-ui/react\";\nimport { EmployeeCard } from \"../organisms/employee/EmployeeCard\";\nimport { useAllEmployees } from \"../../hooks/useAllEmployees\";\nimport { useSelectEmployee } from \"../../hooks/useSelectEmployee\";\nimport { HeaderOnly } from \"../templates/layout/HeaderOnly\";\nimport { EmployeeDetailModal } from \"../organisms/employee/EmployeeDetailModal\";\nimport { useRecoilState } from \"recoil\";\nimport { EmployeeAdminState, EmployeeState } from \"../../contexts/EmployeeState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EmployeeInfoList = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const {\n    isOpen,\n    onClose,\n    onOpen\n  } = useDisclosure();\n  const {\n    getEmployees,\n    employees,\n    loading\n  } = useAllEmployees();\n  const {\n    onSelectEmployee,\n    selectedEmployee\n  } = useSelectEmployee();\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\n  const [employeeAdminState, setEmployeeAdminState] = useRecoilState(EmployeeAdminState);\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  const onClickEmployee = useCallback(id => {\n    onSelectEmployee({\n      id,\n      employees,\n      onOpen\n    });\n  }, [employees]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderOnly, {\n      children: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Wrap, {\n      p: {\n        base: 4,\n        md: 10\n      },\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(WrapItem, {\n        mx: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(EmployeeCard, {\n          id: employee.employeeId,\n          image: employee.image,\n          employeeName: employee.employeeName,\n          fullName: employee.employeeFullName,\n          onClick: onClickEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, employee.employeeId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeDetailModal, {\n      employee: selectedEmployee,\n      isOpen: isOpen,\n      onClose: onClose,\n      id: employeeState,\n      isAdmin: employeeAdminState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"qI6jektOMm5CxzphQLamBWI0grw=\", false, function () {\n  return [useDisclosure, useAllEmployees, useSelectEmployee, useRecoilState, useRecoilState];\n})), \"qI6jektOMm5CxzphQLamBWI0grw=\", false, function () {\n  return [useDisclosure, useAllEmployees, useSelectEmployee, useRecoilState, useRecoilState];\n});\n_c2 = EmployeeInfoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"EmployeeInfoList$memo\");\n$RefreshReg$(_c2, \"EmployeeInfoList\");","map":{"version":3,"names":["useCallback","useEffect","memo","Center","Spinner","Wrap","WrapItem","useDisclosure","EmployeeCard","useAllEmployees","useSelectEmployee","HeaderOnly","EmployeeDetailModal","useRecoilState","EmployeeAdminState","EmployeeState","jsxDEV","_jsxDEV","Fragment","_Fragment","EmployeeInfoList","_s","_c","isOpen","onClose","onOpen","getEmployees","employees","loading","onSelectEmployee","selectedEmployee","employeeState","setEmployeeState","employeeAdminState","setEmployeeAdminState","onClickEmployee","id","children","fileName","_jsxFileName","lineNumber","columnNumber","p","base","md","map","employee","mx","employeeId","image","employeeName","fullName","employeeFullName","onClick","isAdmin","_c2","$RefreshReg$"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/components/pages/EmployeeInfoList.tsx"],"sourcesContent":["import { useCallback, useEffect } from \"react\";\r\nimport { FC, memo } from \"react\";\r\nimport {\r\n  Center,\r\n  Spinner,\r\n  Wrap,\r\n  WrapItem,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { EmployeeCard } from \"../organisms/employee/EmployeeCard\";\r\nimport { useAllEmployees } from \"../../hooks/useAllEmployees\";\r\nimport { useSelectEmployee } from \"../../hooks/useSelectEmployee\";\r\nimport { HeaderOnly } from \"../templates/layout/HeaderOnly\";\r\nimport { EmployeeDetailModal } from \"../organisms/employee/EmployeeDetailModal\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport {\r\n  EmployeeAdminState,\r\n  EmployeeState,\r\n} from \"../../contexts/EmployeeState\";\r\n\r\nexport const EmployeeInfoList: FC = memo(() => {\r\n  const { isOpen, onClose, onOpen } = useDisclosure();\r\n  const { getEmployees, employees, loading } = useAllEmployees();\r\n  const { onSelectEmployee, selectedEmployee } = useSelectEmployee();\r\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\r\n  const [employeeAdminState, setEmployeeAdminState] =\r\n    useRecoilState(EmployeeAdminState);\r\n\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, []);\r\n\r\n  const onClickEmployee = useCallback(\r\n    (id: string) => {\r\n      onSelectEmployee({ id, employees, onOpen });\r\n    },\r\n    [employees]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <HeaderOnly children={\"\"} />\r\n      {loading ? (\r\n        <Center>\r\n          <Spinner />\r\n        </Center>\r\n      ) : (\r\n        <Wrap p={{ base: 4, md: 10 }}>\r\n          {employees.map((employee) => (\r\n            <WrapItem key={employee.employeeId} mx={\"auto\"}>\r\n              <EmployeeCard\r\n                id={employee.employeeId}\r\n                image={employee.image}\r\n                employeeName={employee.employeeName}\r\n                fullName={employee.employeeFullName}\r\n                onClick={onClickEmployee}\r\n              />\r\n            </WrapItem>\r\n          ))}\r\n        </Wrap>\r\n      )}\r\n      <EmployeeDetailModal\r\n        employee={selectedEmployee}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        id={employeeState}\r\n        isAdmin={employeeAdminState}\r\n      />\r\n    </>\r\n  );\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}