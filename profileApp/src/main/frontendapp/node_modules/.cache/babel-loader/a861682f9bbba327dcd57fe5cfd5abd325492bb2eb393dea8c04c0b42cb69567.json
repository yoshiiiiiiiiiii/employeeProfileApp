{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMessage } from \"./useMessage\";\nimport { useEmployee } from \"./useEmployee\";\nimport { EmployeeState, EmployeeAdminState } from \"../contexts/EmployeeState\";\nimport { useRecoilState } from \"recoil\";\nimport { AuthProvider } from \"../contexts/AuthProvider\";\nexport const useEmployeeRegister = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    showMessage\n  } = useMessage();\n  const {\n    getEmployee,\n    load\n  } = useEmployee();\n  const [loading, setLoading] = useState(false);\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\n  const [authProvider, setAuthProvider] = useRecoilState(AuthProvider);\n  const [employeeAdminState, setEmployeeAdminState] = useRecoilState(EmployeeAdminState);\n  const login = useCallback(async props => {\n    const {\n      employeeId,\n      password\n    } = props;\n    setLoading(true);\n    await axios.post(\"/api/login\", {\n      employeeId: employeeId,\n      password: password\n    }).then(res => {\n      //ログイン\n      setEmployeeState(employeeId);\n      setEmployeeAdminState(res.data);\n      showMessage({\n        title: \"ログインしました\",\n        status: \"success\"\n      });\n      //ユーザ情報取得\n      getEmployee({\n        employeeId\n      });\n      setAuthProvider(true);\n      navigate(\"/home\");\n    }).catch(e => {\n      showMessage({\n        title: \"ユーザーが見つかりません\",\n        status: \"error\"\n      });\n      setLoading(false);\n      setEmployeeAdminState(1);\n      setAuthProvider(true);\n      navigate(\"/home\");\n    });\n  }, []);\n  return {\n    login,\n    loading\n  };\n};\n_s(useEmployeeRegister, \"2EBHRtjbCcbq48vfFooiu8MkzAI=\", false, function () {\n  return [useNavigate, useMessage, useEmployee, useRecoilState, useRecoilState, useRecoilState];\n});","map":{"version":3,"names":["axios","useCallback","useState","useNavigate","useMessage","useEmployee","EmployeeState","EmployeeAdminState","useRecoilState","AuthProvider","useEmployeeRegister","_s","navigate","showMessage","getEmployee","load","loading","setLoading","employeeState","setEmployeeState","authProvider","setAuthProvider","employeeAdminState","setEmployeeAdminState","login","props","employeeId","password","post","then","res","data","title","status","catch","e"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useLogin.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMessage } from \"./useMessage\";\r\nimport { useEmployee } from \"./useEmployee\";\r\nimport { EmployeeState, EmployeeAdminState } from \"../contexts/EmployeeState\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { AuthProvider } from \"../contexts/AuthProvider\";\r\n\r\ntype Props = {\r\n  employeeId: string;\r\n  password: string;\r\n};\r\n\r\nexport const useEmployeeRegister = () => {\r\n  const navigate = useNavigate();\r\n  const { showMessage } = useMessage();\r\n  const { getEmployee, load } = useEmployee();\r\n  const [loading, setLoading] = useState(false);\r\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\r\n  const [authProvider, setAuthProvider] = useRecoilState(AuthProvider);\r\n  const [employeeAdminState, setEmployeeAdminState] =\r\n    useRecoilState(EmployeeAdminState);\r\n\r\n  const login = useCallback(async (props: Props) => {\r\n    const { employeeId, password } = props;\r\n    setLoading(true);\r\n    await axios\r\n      .post(\"/api/login\", {\r\n        employeeId: employeeId,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        //ログイン\r\n        setEmployeeState(employeeId);\r\n        setEmployeeAdminState(res.data);\r\n        showMessage({ title: \"ログインしました\", status: \"success\" });\r\n        //ユーザ情報取得\r\n        getEmployee({ employeeId });\r\n        setAuthProvider(true);\r\n        navigate(\"/home\");\r\n      })\r\n      .catch((e) => {\r\n        showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" });\r\n        setLoading(false);\r\n        setEmployeeAdminState(1);\r\n        setAuthProvider(true);\r\n        navigate(\"/home\");\r\n      });\r\n  }, []);\r\n\r\n  return { login, loading };\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,aAAa,EAAEC,kBAAkB,QAAQ,2BAA2B;AAC7E,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,YAAY,QAAQ,0BAA0B;AAOvD,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAY,CAAC,GAAGT,UAAU,CAAC,CAAC;EACpC,MAAM;IAAEU,WAAW;IAAEC;EAAK,CAAC,GAAGV,WAAW,CAAC,CAAC;EAC3C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,cAAc,CAACF,aAAa,CAAC;EACvE,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGb,cAAc,CAACC,YAAY,CAAC;EACpE,MAAM,CAACa,kBAAkB,EAAEC,qBAAqB,CAAC,GAC/Cf,cAAc,CAACD,kBAAkB,CAAC;EAEpC,MAAMiB,KAAK,GAAGvB,WAAW,CAAC,MAAOwB,KAAY,IAAK;IAChD,MAAM;MAAEC,UAAU;MAAEC;IAAS,CAAC,GAAGF,KAAK;IACtCR,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMjB,KAAK,CACR4B,IAAI,CAAC,YAAY,EAAE;MAClBF,UAAU,EAAEA,UAAU;MACtBC,QAAQ,EAAEA;IACZ,CAAC,CAAC,CACDE,IAAI,CAAEC,GAAG,IAAK;MACb;MACAX,gBAAgB,CAACO,UAAU,CAAC;MAC5BH,qBAAqB,CAACO,GAAG,CAACC,IAAI,CAAC;MAC/BlB,WAAW,CAAC;QAAEmB,KAAK,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;MACrD;MACAnB,WAAW,CAAC;QAAEY;MAAW,CAAC,CAAC;MAC3BL,eAAe,CAAC,IAAI,CAAC;MACrBT,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,CACDsB,KAAK,CAAEC,CAAC,IAAK;MACZtB,WAAW,CAAC;QAAEmB,KAAK,EAAE,cAAc;QAAEC,MAAM,EAAE;MAAQ,CAAC,CAAC;MACvDhB,UAAU,CAAC,KAAK,CAAC;MACjBM,qBAAqB,CAAC,CAAC,CAAC;MACxBF,eAAe,CAAC,IAAI,CAAC;MACrBT,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEY,KAAK;IAAER;EAAQ,CAAC;AAC3B,CAAC;AAACL,EAAA,CAtCWD,mBAAmB;EAAA,QACbP,WAAW,EACJC,UAAU,EACJC,WAAW,EAECG,cAAc,EAChBA,cAAc,EAEpDA,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}