{"ast":null,"code":"import{memo,useCallback,useState}from\"react\";import{HeaderOnly}from\"../templates/layout/HeaderOnly\";import{Box,Divider,Flex,Heading,Input,Stack}from\"@chakra-ui/react\";import{PrimaryButton}from\"../atoms/button/PrimaryButton\";import{EmployeeState}from\"../../contexts/EmployeeState\";import{useRecoilState}from\"recoil\";import{useMessage}from\"../../hooks/useMessage\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const EditPassword=/*#__PURE__*/memo(()=>{const{showMessage}=useMessage();const[loading,setLoading]=useState(false);const[employeeState,setEmployeeState]=useRecoilState(EmployeeState);const[oldPassword,setOldPassword]=useState(\"\");const[newPassword,setNewPassword]=useState(\"\");const onChangeOldPassword=useCallback(e=>setOldPassword(e.target.value),[oldPassword]);const onChangeNewPassword=useCallback(e=>setNewPassword(e.target.value),[newPassword]);//API送信関数\nconst handleSubmit=async e=>{setLoading(true);e.preventDefault();await axios.post(\"/api/editPassword\",{employeeId:employeeState,oldPassword:oldPassword,newPassword:newPassword}).then(()=>{showMessage({title:\"パスワードの再設定が完了しました\",status:\"success\"});setLoading(false);setOldPassword(\"\");setNewPassword(\"\");}).catch(()=>{showMessage({title:\"パスワードの再設定が出来ませんでした。旧パスワードが間違っています\",status:\"error\"});setLoading(false);setOldPassword(\"\");setNewPassword(\"\");});};return/*#__PURE__*/_jsx(HeaderOnly,{children:/*#__PURE__*/_jsx(Flex,{align:\"center\",justify:\"center\",height:\"100vh\",children:/*#__PURE__*/_jsxs(Box,{bg:\"white\",w:\"sm\",p:4,borderRadius:\"md\",shadow:\"md\",children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",size:\"lg\",textAlign:\"center\",children:\"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u518D\\u8A2D\\u5B9A\"}),/*#__PURE__*/_jsx(Divider,{my:4}),/*#__PURE__*/_jsxs(Stack,{spacing:6,py:10,px:10,children:[/*#__PURE__*/_jsx(Input,{placeholder:\"\\u793E\\u54E1ID\",type:\"text\",value:employeeState,name:\"employeeId\",readOnly:true}),/*#__PURE__*/_jsx(Input,{placeholder:\"\\u65E7\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",type:\"password\",value:oldPassword,name:\"oldPassword\",onChange:onChangeOldPassword}),/*#__PURE__*/_jsx(Input,{placeholder:\"\\u65B0\\u898F\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",type:\"password\",value:newPassword,name:\"newPassword\",onChange:onChangeNewPassword}),/*#__PURE__*/_jsx(PrimaryButton,{disabled:oldPassword===\"\"||newPassword===\"\",loading:loading,onClick:handleSubmit,children:\"\\u518D\\u8A2D\\u5B9A\"})]})]})})});});","map":{"version":3,"names":["memo","useCallback","useState","HeaderOnly","Box","Divider","Flex","Heading","Input","Stack","PrimaryButton","EmployeeState","useRecoilState","useMessage","axios","jsx","_jsx","jsxs","_jsxs","EditPassword","showMessage","loading","setLoading","employeeState","setEmployeeState","oldPassword","setOldPassword","newPassword","setNewPassword","onChangeOldPassword","e","target","value","onChangeNewPassword","handleSubmit","preventDefault","post","employeeId","then","title","status","catch","children","align","justify","height","bg","w","p","borderRadius","shadow","as","size","textAlign","my","spacing","py","px","placeholder","type","name","readOnly","onChange","disabled","onClick"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/components/pages/EditPassword.tsx"],"sourcesContent":["import { ChangeEvent, FC, FormEvent, memo, useCallback, useState } from \"react\";\r\nimport { HeaderOnly } from \"../templates/layout/HeaderOnly\";\r\nimport { Box, Divider, Flex, Heading, Input, Stack } from \"@chakra-ui/react\";\r\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\r\nimport { EmployeeState } from \"../../contexts/EmployeeState\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useMessage } from \"../../hooks/useMessage\";\r\nimport axios from \"axios\";\r\n\r\nexport const EditPassword: FC = memo(() => {\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  const onChangeOldPassword = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => setOldPassword(e.target.value),\r\n    [oldPassword]\r\n  );\r\n\r\n  const onChangeNewPassword = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => setNewPassword(e.target.value),\r\n    [newPassword]\r\n  );\r\n\r\n  //API送信関数\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\"/api/editPassword\", {\r\n        employeeId: employeeState,\r\n        oldPassword: oldPassword,\r\n        newPassword: newPassword,\r\n      })\r\n      .then(() => {\r\n        showMessage({\r\n          title: \"パスワードの再設定が完了しました\",\r\n          status: \"success\",\r\n        });\r\n        setLoading(false);\r\n        setOldPassword(\"\");\r\n        setNewPassword(\"\");\r\n      })\r\n      .catch(() => {\r\n        showMessage({\r\n          title:\r\n            \"パスワードの再設定が出来ませんでした。旧パスワードが間違っています\",\r\n          status: \"error\",\r\n        });\r\n        setLoading(false);\r\n        setOldPassword(\"\");\r\n        setNewPassword(\"\");\r\n      });\r\n  };\r\n  return (\r\n    <HeaderOnly>\r\n      <Flex align={\"center\"} justify={\"center\"} height={\"100vh\"}>\r\n        <Box bg={\"white\"} w={\"sm\"} p={4} borderRadius={\"md\"} shadow={\"md\"}>\r\n          <Heading as={\"h1\"} size={\"lg\"} textAlign={\"center\"}>\r\n            パスワード再設定\r\n          </Heading>\r\n          <Divider my={4} />\r\n          <Stack spacing={6} py={10} px={10}>\r\n            <Input\r\n              placeholder=\"社員ID\"\r\n              type=\"text\"\r\n              value={employeeState}\r\n              name=\"employeeId\"\r\n              readOnly={true}\r\n            />\r\n            <Input\r\n              placeholder=\"旧パスワード\"\r\n              type=\"password\"\r\n              value={oldPassword}\r\n              name=\"oldPassword\"\r\n              onChange={onChangeOldPassword}\r\n            />\r\n            <Input\r\n              placeholder=\"新規パスワード\"\r\n              type=\"password\"\r\n              value={newPassword}\r\n              name=\"newPassword\"\r\n              onChange={onChangeNewPassword}\r\n            />\r\n            <PrimaryButton\r\n              disabled={oldPassword === \"\" || newPassword === \"\"}\r\n              loading={loading}\r\n              onClick={handleSubmit}\r\n            >\r\n              再設定\r\n            </PrimaryButton>\r\n          </Stack>\r\n        </Box>\r\n      </Flex>\r\n    </HeaderOnly>\r\n  );\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}