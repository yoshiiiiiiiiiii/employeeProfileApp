{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { useMessage } from \"./useMessage\";\nexport const useEmployee = () => {\n  _s();\n  const {\n    showMessage\n  } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const [employee, setEmployee] = useState();\n  const getEmployee = useCallback(async props => {\n    const {\n      employeeId\n    } = props;\n    console.log(\"従業員情報取得開始\");\n    setLoading(true);\n    await axios.get(\"/api/employee\", {\n      params: {\n        id: employeeId\n      }\n    }).then(res => {\n      console.log(res);\n      setEmployee(res.data);\n    }).catch(e => {\n      console.log(e);\n      showMessage({\n        title: \"従業員情報の取得に失敗しました\",\n        status: \"error\"\n      });\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  return {\n    getEmployee,\n    employee,\n    loading\n  };\n};\n_s(useEmployee, \"pflunj8N2OcCuG6xw23VhehVLWQ=\", false, function () {\n  return [useMessage];\n});","map":{"version":3,"names":["axios","useCallback","useState","useMessage","useEmployee","_s","showMessage","loading","setLoading","employee","setEmployee","getEmployee","props","employeeId","console","log","get","params","id","then","res","data","catch","e","title","status","finally"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useEmployee.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { Employee } from \"../types/api/Employee\";\r\nimport { useMessage } from \"./useMessage\";\r\nimport { EmployeeState } from \"../contexts/EmployeeState\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\ntype Props = {\r\n  employeeId: string;\r\n};\r\n\r\nexport const useEmployee = () => {\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n  const [employee, setEmployee] = useState<Employee>();\r\n\r\n  const getEmployee = useCallback(async (props: Props) => {\r\n    const { employeeId } = props;\r\n    console.log(\"従業員情報取得開始\");\r\n    setLoading(true);\r\n    await axios\r\n      .get(\"/api/employee\", {\r\n        params: {\r\n          id: employeeId,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setEmployee(res.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        showMessage({\r\n          title: \"従業員情報の取得に失敗しました\",\r\n          status: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return { getEmployee, employee, loading };\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAASC,UAAU,QAAQ,cAAc;AAQzC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAY,CAAC,GAAGH,UAAU,CAAC,CAAC;EACpC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAW,CAAC;EAEpD,MAAMS,WAAW,GAAGV,WAAW,CAAC,MAAOW,KAAY,IAAK;IACtD,MAAM;MAAEC;IAAW,CAAC,GAAGD,KAAK;IAC5BE,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBP,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMR,KAAK,CACRgB,GAAG,CAAC,eAAe,EAAE;MACpBC,MAAM,EAAE;QACNC,EAAE,EAAEL;MACN;IACF,CAAC,CAAC,CACDM,IAAI,CAAEC,GAAG,IAAK;MACbN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;MAChBV,WAAW,CAACU,GAAG,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAK;MACZT,OAAO,CAACC,GAAG,CAACQ,CAAC,CAAC;MACdjB,WAAW,CAAC;QACVkB,KAAK,EAAE,iBAAiB;QACxBC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACblB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEG,WAAW;IAAEF,QAAQ;IAAEF;EAAQ,CAAC;AAC3C,CAAC;AAACF,EAAA,CAhCWD,WAAW;EAAA,QACED,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}