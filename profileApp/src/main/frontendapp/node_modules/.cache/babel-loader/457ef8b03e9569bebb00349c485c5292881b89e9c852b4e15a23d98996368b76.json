{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { useMessage } from \"./useMessage\";\n\n/**\r\n * 全社員情報をリストで取得するカスタムフック\r\n * @returns getEmployees:社員情報取得処理 employees:社員情報リスト loading:処理中判定\r\n */\nexport const useAllEmployees = () => {\n  _s();\n  const {\n    showMessage\n  } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const getEmployees = useCallback(async () => {\n    console.log(\"社員リスト取得開始\");\n    setLoading(true);\n    await axios.get(\"/api/employeeList\").then(res => {\n      setEmployees(res.data);\n      console.log(employees);\n    }).catch(e => {\n      console.log(e);\n      showMessage({\n        title: \"社員情報の取得に失敗しました\",\n        status: \"error\"\n      });\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  return {\n    getEmployees,\n    employees,\n    loading\n  };\n};\n_s(useAllEmployees, \"HT0rHiDdy+fLWmRvfyjJT9B5kco=\", false, function () {\n  return [useMessage];\n});","map":{"version":3,"names":["axios","useCallback","useState","useMessage","useAllEmployees","_s","showMessage","loading","setLoading","employees","setEmployees","getEmployees","console","log","get","then","res","data","catch","e","title","status","finally"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useAllEmployees.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { Employee } from \"../types/api/Employee\";\r\nimport { useMessage } from \"./useMessage\";\r\n\r\n/**\r\n * 全社員情報をリストで取得するカスタムフック\r\n * @returns getEmployees:社員情報取得処理 employees:社員情報リスト loading:処理中判定\r\n */\r\nexport const useAllEmployees = () => {\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n  const [employees, setEmployees] = useState<Array<Employee>>([]);\r\n\r\n  const getEmployees = useCallback(async () => {\r\n    console.log(\"社員リスト取得開始\")\r\n    setLoading(true);\r\n    await axios\r\n      .get(\"/api/employeeList\")\r\n      .then((res) => {\r\n        setEmployees(res.data);\r\n        console.log(employees)\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n        showMessage({ title: \"社員情報の取得に失敗しました\", status: \"error\" });\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return { getEmployees, employees, loading };\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAASC,UAAU,QAAQ,cAAc;;AAEzC;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAY,CAAC,GAAGH,UAAU,CAAC,CAAC;EACpC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAkB,EAAE,CAAC;EAE/D,MAAMS,YAAY,GAAGV,WAAW,CAAC,YAAY;IAC3CW,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBL,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMR,KAAK,CACRc,GAAG,CAAC,mBAAmB,CAAC,CACxBC,IAAI,CAAEC,GAAG,IAAK;MACbN,YAAY,CAACM,GAAG,CAACC,IAAI,CAAC;MACtBL,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;IACxB,CAAC,CAAC,CACDS,KAAK,CAAEC,CAAC,IAAK;MACZP,OAAO,CAACC,GAAG,CAACM,CAAC,CAAC;MACdb,WAAW,CAAC;QAAEc,KAAK,EAAE,gBAAgB;QAAEC,MAAM,EAAE;MAAQ,CAAC,CAAC;IAC3D,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACbd,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEG,YAAY;IAAEF,SAAS;IAAEF;EAAQ,CAAC;AAC7C,CAAC;AAACF,EAAA,CAxBWD,eAAe;EAAA,QACFD,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}