{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMessage } from \"./useMessage\";\n/**\r\n * 社員情報を削除するカスタムフック\r\n * @returns employeeDelete:社員情報削除処理 loading:処理中判定\r\n */\nexport const useEmployeeDelete = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    showMessage\n  } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const employeeDelete = useCallback(async props => {\n    const {\n      employeeId\n    } = props;\n    setLoading(true);\n    await axios.post(\"/api/delete\", {\n      employeeId: employeeId\n    }).then(() => {\n      showMessage({\n        title: \"削除が完了しました\",\n        status: \"success\"\n      });\n      navigate(\"/home\");\n    }).catch(() => {\n      showMessage({\n        title: \"削除が出来ませんでした\",\n        status: \"error\"\n      });\n      setLoading(false);\n    });\n  }, []);\n  return {\n    employeeDelete,\n    loading\n  };\n};\n_s(useEmployeeDelete, \"A859TVHbx8ik2SgNu3/BySkYbDo=\", false, function () {\n  return [useNavigate, useMessage];\n});","map":{"version":3,"names":["axios","useCallback","useState","useNavigate","useMessage","useEmployeeDelete","_s","navigate","showMessage","loading","setLoading","employeeDelete","props","employeeId","post","then","title","status","catch"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useEmployeeDelete.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMessage } from \"./useMessage\";\r\n\r\ntype Props = {\r\n  employeeId: string;\r\n};\r\n\r\n/**\r\n * 社員情報を削除するカスタムフック\r\n * @returns employeeDelete:社員情報削除処理 loading:処理中判定\r\n */\r\nexport const useEmployeeDelete = () => {\r\n  const navigate = useNavigate();\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const employeeDelete = useCallback(async (props: Props) => {\r\n    const { employeeId } = props;\r\n    setLoading(true);\r\n    await axios\r\n      .post(\"/api/delete\", {\r\n        employeeId: employeeId,\r\n      })\r\n      .then(() => {\r\n        showMessage({ title: \"削除が完了しました\", status: \"success\" });\r\n        navigate(\"/home\");\r\n      })\r\n      .catch(() => {\r\n        showMessage({ title: \"削除が出来ませんでした\", status: \"error\" });\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return { employeeDelete, loading };\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,cAAc;AAMzC;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEK;EAAY,CAAC,GAAGJ,UAAU,CAAC,CAAC;EACpC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,cAAc,GAAGV,WAAW,CAAC,MAAOW,KAAY,IAAK;IACzD,MAAM;MAAEC;IAAW,CAAC,GAAGD,KAAK;IAC5BF,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMV,KAAK,CACRc,IAAI,CAAC,aAAa,EAAE;MACnBD,UAAU,EAAEA;IACd,CAAC,CAAC,CACDE,IAAI,CAAC,MAAM;MACVP,WAAW,CAAC;QAAEQ,KAAK,EAAE,WAAW;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;MACtDV,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,CACDW,KAAK,CAAC,MAAM;MACXV,WAAW,CAAC;QAAEQ,KAAK,EAAE,aAAa;QAAEC,MAAM,EAAE;MAAQ,CAAC,CAAC;MACtDP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEC,cAAc;IAAEF;EAAQ,CAAC;AACpC,CAAC;AAACH,EAAA,CAvBWD,iBAAiB;EAAA,QACXF,WAAW,EACJC,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}