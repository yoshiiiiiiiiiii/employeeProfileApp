{"ast":null,"code":"import axios from\"axios\";import{useCallback,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{useMessage}from\"./useMessage\";/**\r\n * 社員情報を登録する関数\r\n * @returns employeeRegister:社員登録処理 loading:処理中判定\r\n */export const useEmployeeRegister=()=>{const navigate=useNavigate();const{showMessage}=useMessage();const[loading,setLoading]=useState(false);const employeeRegister=useCallback(async props=>{const{employeeId,password,isAdmin}=props;setLoading(true);await axios.post(\"/api/register\",{employeeId:employeeId,password:password,isAdmin:parseInt(isAdmin)}).then(()=>{showMessage({title:\"社員登録が完了しました\",status:\"success\"});navigate(\"/home\");}).catch(()=>{showMessage({title:\"社員登録が出来ませんでした\",status:\"error\"});setLoading(false);});},[]);return{employeeRegister,loading};};","map":{"version":3,"names":["axios","useCallback","useState","useNavigate","useMessage","useEmployeeRegister","navigate","showMessage","loading","setLoading","employeeRegister","props","employeeId","password","isAdmin","post","parseInt","then","title","status","catch"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useEmployeeRegister.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMessage } from \"./useMessage\";\r\n\r\ntype Props = {\r\n  employeeId: string;\r\n  password: string;\r\n  isAdmin: string;\r\n};\r\n\r\n/**\r\n * 社員情報を登録する関数\r\n * @returns employeeRegister:社員登録処理 loading:処理中判定\r\n */\r\nexport const useEmployeeRegister = () => {\r\n  const navigate = useNavigate();\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const employeeRegister = useCallback(async (props: Props) => {\r\n    const { employeeId, password, isAdmin } = props;\r\n    setLoading(true);\r\n    await axios\r\n      .post(\"/api/register\", {\r\n        employeeId: employeeId,\r\n        password: password,\r\n        isAdmin: parseInt(isAdmin),\r\n      })\r\n      .then(() => {\r\n        showMessage({ title: \"社員登録が完了しました\", status: \"success\" });\r\n        navigate(\"/home\");\r\n      })\r\n      .catch(() => {\r\n        showMessage({ title: \"社員登録が出来ませんでした\", status: \"error\" });\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return { employeeRegister, loading };\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CAC7C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,UAAU,KAAQ,cAAc,CAQzC;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CACvC,KAAM,CAAAC,QAAQ,CAAGH,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEI,WAAY,CAAC,CAAGH,UAAU,CAAC,CAAC,CACpC,KAAM,CAACI,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAQ,gBAAgB,CAAGT,WAAW,CAAC,KAAO,CAAAU,KAAY,EAAK,CAC3D,KAAM,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,OAAQ,CAAC,CAAGH,KAAK,CAC/CF,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAT,KAAK,CACRe,IAAI,CAAC,eAAe,CAAE,CACrBH,UAAU,CAAEA,UAAU,CACtBC,QAAQ,CAAEA,QAAQ,CAClBC,OAAO,CAAEE,QAAQ,CAACF,OAAO,CAC3B,CAAC,CAAC,CACDG,IAAI,CAAC,IAAM,CACVV,WAAW,CAAC,CAAEW,KAAK,CAAE,aAAa,CAAEC,MAAM,CAAE,SAAU,CAAC,CAAC,CACxDb,QAAQ,CAAC,OAAO,CAAC,CACnB,CAAC,CAAC,CACDc,KAAK,CAAC,IAAM,CACXb,WAAW,CAAC,CAAEW,KAAK,CAAE,eAAe,CAAEC,MAAM,CAAE,OAAQ,CAAC,CAAC,CACxDV,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEC,gBAAgB,CAAEF,OAAQ,CAAC,CACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}