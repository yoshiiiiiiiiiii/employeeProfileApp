{"ast":null,"code":"import axios from\"axios\";import{useCallback,useState}from\"react\";import{useMessage}from\"./useMessage\";export const useEmployee=()=>{const{showMessage}=useMessage();const[load,setLoad]=useState(false);const[employee,setEmployee]=useState(null);const getEmployee=useCallback(async props=>{const{employeeId}=props;setLoad(true);await axios.get(\"/api/employee\",{params:{id:employeeId}}).then(res=>{setEmployee(res.data);}).catch(e=>{console.log(e);showMessage({title:\"社員情報の取得に失敗しました\",status:\"error\"});}).finally(()=>{setLoad(false);});},[]);return{getEmployee,employee,load};};","map":{"version":3,"names":["axios","useCallback","useState","useMessage","useEmployee","showMessage","load","setLoad","employee","setEmployee","getEmployee","props","employeeId","get","params","id","then","res","data","catch","e","console","log","title","status","finally"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useEmployee.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useMessage } from \"./useMessage\";\r\nimport {\r\n  EmployeeNameState,\r\n  EmployeeFullNameState,\r\n  EmployeeHobbiesState,\r\n  EmployeeImageState,\r\n} from \"../contexts/EmployeeState\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { Employee } from \"../types/api/Employee\";\r\n\r\ntype Props = {\r\n  employeeId: string;\r\n};\r\n\r\nexport const useEmployee = () => {\r\n  const { showMessage } = useMessage();\r\n  const [load, setLoad] = useState(false);\r\n  const [employee, setEmployee] = useState<Employee>(null);\r\n\r\n  const getEmployee = useCallback(async (props: Props) => {\r\n    const { employeeId } = props;\r\n    setLoad(true);\r\n    await axios\r\n      .get(\"/api/employee\", {\r\n        params: {\r\n          id: employeeId,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setEmployee(res.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        showMessage({\r\n          title: \"社員情報の取得に失敗しました\",\r\n          status: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setLoad(false);\r\n      });\r\n  }, []);\r\n\r\n  return { getEmployee, employee, load };\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CAC7C,OAASC,UAAU,KAAQ,cAAc,CAezC,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAEC,WAAY,CAAC,CAAGF,UAAU,CAAC,CAAC,CACpC,KAAM,CAACG,IAAI,CAAEC,OAAO,CAAC,CAAGL,QAAQ,CAAC,KAAK,CAAC,CACvC,KAAM,CAACM,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAW,IAAI,CAAC,CAExD,KAAM,CAAAQ,WAAW,CAAGT,WAAW,CAAC,KAAO,CAAAU,KAAY,EAAK,CACtD,KAAM,CAAEC,UAAW,CAAC,CAAGD,KAAK,CAC5BJ,OAAO,CAAC,IAAI,CAAC,CACb,KAAM,CAAAP,KAAK,CACRa,GAAG,CAAC,eAAe,CAAE,CACpBC,MAAM,CAAE,CACNC,EAAE,CAAEH,UACN,CACF,CAAC,CAAC,CACDI,IAAI,CAAEC,GAAG,EAAK,CACbR,WAAW,CAACQ,GAAG,CAACC,IAAI,CAAC,CACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,EAAK,CACZC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CACdf,WAAW,CAAC,CACVkB,KAAK,CAAE,gBAAgB,CACvBC,MAAM,CAAE,OACV,CAAC,CAAC,CACJ,CAAC,CAAC,CACDC,OAAO,CAAC,IAAM,CACblB,OAAO,CAAC,KAAK,CAAC,CAChB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEG,WAAW,CAAEF,QAAQ,CAAEF,IAAK,CAAC,CACxC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}