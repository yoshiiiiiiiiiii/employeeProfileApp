{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { useMessage } from \"./useMessage\";\nexport const useEmployee = () => {\n  _s();\n  const {\n    showMessage\n  } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const [employee, setEmployee] = useState();\n  const getEmployee = useCallback(async () => {\n    console.log(\"従業員情報取得開始\");\n    setLoading(true);\n    await axios.get(\"/api/employee\").then(res => {\n      console.log(res);\n      setEmployee(res.data);\n    }).catch(e => {\n      console.log(e);\n      showMessage({\n        title: \"従業員情報の取得に失敗しました\",\n        status: \"error\"\n      });\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  return {\n    getEmployee,\n    employee,\n    loading\n  };\n};\n_s(useEmployee, \"pflunj8N2OcCuG6xw23VhehVLWQ=\", false, function () {\n  return [useMessage];\n});","map":{"version":3,"names":["axios","useCallback","useState","useMessage","useEmployee","_s","showMessage","loading","setLoading","employee","setEmployee","getEmployee","console","log","get","then","res","data","catch","e","title","status","finally"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useEmployee.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { Employee } from \"../types/api/Employee\";\r\nimport { useMessage } from \"./useMessage\";\r\nimport { EmployeeState } from \"../contexts/EmployeeState\";\r\n\r\nexport const useEmployee = () => {\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n  const [employee, setEmployee] = useState<Employee>();\r\n\r\n  const getEmployee = useCallback(async () => {\r\n    console.log(\"従業員情報取得開始\")\r\n    setLoading(true);\r\n    await axios\r\n      .get(\"/api/employee\")\r\n      .then((res) => {\r\n        console.log(res)\r\n        setEmployee(res.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n        showMessage({ title: \"従業員情報の取得に失敗しました\", status: \"error\" });\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return { getEmployee, employee, loading };\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAASC,UAAU,QAAQ,cAAc;AAGzC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAY,CAAC,GAAGH,UAAU,CAAC,CAAC;EACpC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAW,CAAC;EAEpD,MAAMS,WAAW,GAAGV,WAAW,CAAC,YAAY;IAC1CW,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBL,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMR,KAAK,CACRc,GAAG,CAAC,eAAe,CAAC,CACpBC,IAAI,CAAEC,GAAG,IAAK;MACbJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;MAChBN,WAAW,CAACM,GAAG,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAK;MACZP,OAAO,CAACC,GAAG,CAACM,CAAC,CAAC;MACdb,WAAW,CAAC;QAAEc,KAAK,EAAE,iBAAiB;QAAEC,MAAM,EAAE;MAAQ,CAAC,CAAC;IAC5D,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACbd,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEG,WAAW;IAAEF,QAAQ;IAAEF;EAAQ,CAAC;AAC3C,CAAC;AAACF,EAAA,CAxBWD,WAAW;EAAA,QACED,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}