{"ast":null,"code":"import axios from\"axios\";import{useCallback,useState}from\"react\";import{useMessage}from\"./useMessage\";import{EmployeeNameState,EmployeeFullNameState,EmployeeHobbiesState,EmployeeImageState,EmployeeState}from\"../contexts/EmployeeState\";import{useRecoilState}from\"recoil\";export const useEditProfile=()=>{const{showMessage}=useMessage();const[loading,setLoading]=useState(false);const[employeeState,setEmployeeState]=useRecoilState(EmployeeState);const[employeeNameState,setEmployeeNameState]=useRecoilState(EmployeeNameState);const[employeeFullNameState,setEmployeeFullNameState]=useRecoilState(EmployeeFullNameState);const[employeeHobbiesState,setEmployeeHobbiesState]=useRecoilState(EmployeeHobbiesState);const[employeeImageState,setEmployeeImageState]=useRecoilState(EmployeeImageState);const updateProfile=useCallback(async props=>{const{image}=props;console.log(\"従業員情報更新開始\");console.log(image);setLoading(true);await axios.post(\"/api/editProfile\",{employeeId:employeeState,employeeName:employeeNameState,employeeFullName:employeeFullNameState,hobbies:employeeHobbiesState}).then(res=>{setEmployeeNameState(res.data.employeeName);setEmployeeFullNameState(res.data.employeeFullName);setEmployeeHobbiesState(res.data.hobbies);setEmployeeImageState(res.data.image);showMessage({title:\"社員情報を更新しました\",status:\"success\"});}).catch(e=>{console.log(e);showMessage({title:\"社員情報の更新に失敗しました\",status:\"error\"});}).finally(()=>{setLoading(false);});},[]);return{updateProfile,loading};};","map":{"version":3,"names":["axios","useCallback","useState","useMessage","EmployeeNameState","EmployeeFullNameState","EmployeeHobbiesState","EmployeeImageState","EmployeeState","useRecoilState","useEditProfile","showMessage","loading","setLoading","employeeState","setEmployeeState","employeeNameState","setEmployeeNameState","employeeFullNameState","setEmployeeFullNameState","employeeHobbiesState","setEmployeeHobbiesState","employeeImageState","setEmployeeImageState","updateProfile","props","image","console","log","post","employeeId","employeeName","employeeFullName","hobbies","then","res","data","title","status","catch","e","finally"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useEditProfile.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { Employee } from \"../types/api/Employee\";\r\nimport { useMessage } from \"./useMessage\";\r\nimport {\r\n  EmployeeNameState,\r\n  EmployeeFullNameState,\r\n  EmployeeHobbiesState,\r\n  EmployeeImageState,\r\n  EmployeeState,\r\n} from \"../contexts/EmployeeState\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\ntype Props = {\r\n    image?:Blob\r\n}\r\n\r\nexport const useEditProfile = () => {\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\r\n  const [employeeNameState, setEmployeeNameState] =\r\n    useRecoilState(EmployeeNameState);\r\n  const [employeeFullNameState, setEmployeeFullNameState] = useRecoilState(\r\n    EmployeeFullNameState\r\n  );\r\n  const [employeeHobbiesState, setEmployeeHobbiesState] =\r\n    useRecoilState(EmployeeHobbiesState);\r\n  const [employeeImageState, setEmployeeImageState] =\r\n    useRecoilState(EmployeeImageState);\r\n\r\n  const updateProfile = useCallback(async (props:Props) => {\r\n    const {image} = props;\r\n    console.log(\"従業員情報更新開始\");\r\n    console.log(image);\r\n    setLoading(true);\r\n    await axios\r\n      .post(\"/api/editProfile\", {\r\n        employeeId: employeeState,\r\n        employeeName: employeeNameState,\r\n        employeeFullName: employeeFullNameState,\r\n        hobbies: employeeHobbiesState,\r\n      })\r\n      .then((res) => {\r\n        setEmployeeNameState(res.data.employeeName);\r\n        setEmployeeFullNameState(res.data.employeeFullName);\r\n        setEmployeeHobbiesState(res.data.hobbies);\r\n        setEmployeeImageState(res.data.image);\r\n        showMessage({\r\n          title: \"社員情報を更新しました\",\r\n          status: \"success\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        showMessage({\r\n          title: \"社員情報の更新に失敗しました\",\r\n          status: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return { updateProfile, loading };\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CAE7C,OAASC,UAAU,KAAQ,cAAc,CACzC,OACEC,iBAAiB,CACjBC,qBAAqB,CACrBC,oBAAoB,CACpBC,kBAAkB,CAClBC,aAAa,KACR,2BAA2B,CAClC,OAASC,cAAc,KAAQ,QAAQ,CAMvC,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC,KAAM,CAAEC,WAAY,CAAC,CAAGR,UAAU,CAAC,CAAC,CACpC,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACY,aAAa,CAAEC,gBAAgB,CAAC,CAAGN,cAAc,CAACD,aAAa,CAAC,CACvE,KAAM,CAACQ,iBAAiB,CAAEC,oBAAoB,CAAC,CAC7CR,cAAc,CAACL,iBAAiB,CAAC,CACnC,KAAM,CAACc,qBAAqB,CAAEC,wBAAwB,CAAC,CAAGV,cAAc,CACtEJ,qBACF,CAAC,CACD,KAAM,CAACe,oBAAoB,CAAEC,uBAAuB,CAAC,CACnDZ,cAAc,CAACH,oBAAoB,CAAC,CACtC,KAAM,CAACgB,kBAAkB,CAAEC,qBAAqB,CAAC,CAC/Cd,cAAc,CAACF,kBAAkB,CAAC,CAEpC,KAAM,CAAAiB,aAAa,CAAGvB,WAAW,CAAC,KAAO,CAAAwB,KAAW,EAAK,CACvD,KAAM,CAACC,KAAK,CAAC,CAAGD,KAAK,CACrBE,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,CACxBD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAClBb,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAb,KAAK,CACR6B,IAAI,CAAC,kBAAkB,CAAE,CACxBC,UAAU,CAAEhB,aAAa,CACzBiB,YAAY,CAAEf,iBAAiB,CAC/BgB,gBAAgB,CAAEd,qBAAqB,CACvCe,OAAO,CAAEb,oBACX,CAAC,CAAC,CACDc,IAAI,CAAEC,GAAG,EAAK,CACblB,oBAAoB,CAACkB,GAAG,CAACC,IAAI,CAACL,YAAY,CAAC,CAC3CZ,wBAAwB,CAACgB,GAAG,CAACC,IAAI,CAACJ,gBAAgB,CAAC,CACnDX,uBAAuB,CAACc,GAAG,CAACC,IAAI,CAACH,OAAO,CAAC,CACzCV,qBAAqB,CAACY,GAAG,CAACC,IAAI,CAACV,KAAK,CAAC,CACrCf,WAAW,CAAC,CACV0B,KAAK,CAAE,aAAa,CACpBC,MAAM,CAAE,SACV,CAAC,CAAC,CACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,EAAK,CACZb,OAAO,CAACC,GAAG,CAACY,CAAC,CAAC,CACd7B,WAAW,CAAC,CACV0B,KAAK,CAAE,gBAAgB,CACvBC,MAAM,CAAE,OACV,CAAC,CAAC,CACJ,CAAC,CAAC,CACDG,OAAO,CAAC,IAAM,CACb5B,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEW,aAAa,CAAEZ,OAAQ,CAAC,CACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}