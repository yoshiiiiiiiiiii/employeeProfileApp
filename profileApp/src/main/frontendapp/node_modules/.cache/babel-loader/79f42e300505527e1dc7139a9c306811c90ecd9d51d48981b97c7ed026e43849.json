{"ast":null,"code":"import{memo}from\"react\";import{Button}from\"@chakra-ui/react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const PrimaryButton=/*#__PURE__*/memo(props=>{const{children,disabled=false,loading=false,onClick}=props;return/*#__PURE__*/_jsx(Button,{bg:\"teal.400\",color:\"white\",_hover:{opacity:0.8},isDisabled:disabled||loading,isLoading:loading,onClick:onClick,children:children});});","map":{"version":3,"names":["memo","Button","jsx","_jsx","PrimaryButton","props","children","disabled","loading","onClick","bg","color","_hover","opacity","isDisabled","isLoading"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/components/atoms/button/PrimaryButton.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\r\nimport { FC, memo } from \"react\";\r\nimport { Button } from \"@chakra-ui/react\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  onClick: any;\r\n};\r\n\r\nexport const PrimaryButton: FC<Props> = memo((props) => {\r\n  const { children, disabled = false, loading = false, onClick } = props;\r\n  return (\r\n    <Button\r\n      bg={\"teal.400\"}\r\n      color={\"white\"}\r\n      _hover={{ opacity: 0.8 }}\r\n      isDisabled={disabled || loading}\r\n      isLoading={loading}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n});\r\n"],"mappings":"AACA,OAAaA,IAAI,KAAQ,OAAO,CAChC,OAASC,MAAM,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAS1C,MAAO,MAAM,CAAAC,aAAwB,cAAGJ,IAAI,CAAEK,KAAK,EAAK,CACtD,KAAM,CAAEC,QAAQ,CAAEC,QAAQ,CAAG,KAAK,CAAEC,OAAO,CAAG,KAAK,CAAEC,OAAQ,CAAC,CAAGJ,KAAK,CACtE,mBACEF,IAAA,CAACF,MAAM,EACLS,EAAE,CAAE,UAAW,CACfC,KAAK,CAAE,OAAQ,CACfC,MAAM,CAAE,CAAEC,OAAO,CAAE,GAAI,CAAE,CACzBC,UAAU,CAAEP,QAAQ,EAAIC,OAAQ,CAChCO,SAAS,CAAEP,OAAQ,CACnBC,OAAO,CAAEA,OAAQ,CAAAH,QAAA,CAEhBA,QAAQ,CACH,CAAC,CAEb,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}