{"ast":null,"code":"var _jsxFileName = \"/home/yoshintm/React/react-type-script-webapp/src/components/molecules/ConfigDialog.tsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useEffect } from \"react\";\nimport { AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay, Button } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ConfigDialog = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n  useEffect(() => {\n    console.log(\"onOpen\");\n    onOpen();\n  }, []);\n  const {\n    isOpen,\n    onClose,\n    cancelRef,\n    onClick,\n    headerChild,\n    bodyChild,\n    oncloseButtonChild,\n    onclickButtonChild,\n    onOpen\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(\"onOpen\"), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      isOpen: isOpen,\n      leastDestructiveRef: cancelRef,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n        children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: headerChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n            children: bodyChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              ref: cancelRef,\n              onClick: onClose,\n              children: oncloseButtonChild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: onClick,\n              ml: 3,\n              children: onclickButtonChild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = ConfigDialog;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConfigDialog$memo\");\n$RefreshReg$(_c2, \"ConfigDialog\");","map":{"version":3,"names":["React","memo","useEffect","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","ConfigDialog","_s","_c","props","console","log","onOpen","isOpen","onClose","cancelRef","onClick","headerChild","bodyChild","oncloseButtonChild","onclickButtonChild","children","leastDestructiveRef","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","ref","colorScheme","ml","_c2","$RefreshReg$"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/components/molecules/ConfigDialog.tsx"],"sourcesContent":["import React, { FC, memo, useEffect } from \"react\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\ntype Props = {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  cancelRef: any;\r\n  onClick: any;\r\n  headerChild: string;\r\n  bodyChild: string;\r\n  oncloseButtonChild: string;\r\n  onclickButtonChild: string;\r\n  onOpen: () => void;\r\n};\r\n\r\nexport const ConfigDialog: FC<Props> = memo((props) => {\r\n  useEffect(() => {\r\n    console.log(\"onOpen\");\r\n    onOpen();\r\n  }, []);\r\n\r\n  const {\r\n    isOpen,\r\n    onClose,\r\n    cancelRef,\r\n    onClick,\r\n    headerChild,\r\n    bodyChild,\r\n    oncloseButtonChild,\r\n    onclickButtonChild,\r\n    onOpen,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n    {console.log(\"onOpen\")}\r\n      <AlertDialog\r\n        isOpen={isOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={onClose}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              {headerChild}\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>{bodyChild}</AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={onClose}>\r\n                {oncloseButtonChild}\r\n              </Button>\r\n              <Button colorScheme=\"red\" onClick={onClick} ml={3}>\r\n                {onclickButtonChild}\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </>\r\n  );\r\n});\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,IAAI,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,WAAW,EACXC,eAAe,EACfC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,MAAM,QACD,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAc1B,OAAO,MAAMC,YAAuB,gBAAAC,EAAA,eAAGd,IAAI,CAAAe,EAAA,GAAAD,EAAA,CAAEE,KAAK,IAAK;EAAAF,EAAA;EACrDb,SAAS,CAAC,MAAM;IACdgB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBC,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IACJC,MAAM;IACNC,OAAO;IACPC,SAAS;IACTC,OAAO;IACPC,WAAW;IACXC,SAAS;IACTC,kBAAkB;IAClBC,kBAAkB;IAClBR;EACF,CAAC,GAAGH,KAAK;EAET,oBACEN,OAAA,CAAAE,SAAA;IAAAgB,QAAA,GACCX,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,eACpBR,OAAA,CAACR,WAAW;MACVkB,MAAM,EAAEA,MAAO;MACfS,mBAAmB,EAAEP,SAAU;MAC/BD,OAAO,EAAEA,OAAQ;MAAAO,QAAA,eAEjBlB,OAAA,CAACH,kBAAkB;QAAAqB,QAAA,eACjBlB,OAAA,CAACJ,kBAAkB;UAAAsB,QAAA,gBACjBlB,OAAA,CAACL,iBAAiB;YAACyB,QAAQ,EAAC,IAAI;YAACC,UAAU,EAAC,MAAM;YAAAH,QAAA,EAC/CJ;UAAW;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,eAEpBzB,OAAA,CAACP,eAAe;YAAAyB,QAAA,EAAEH;UAAS;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CAAC,eAE9CzB,OAAA,CAACN,iBAAiB;YAAAwB,QAAA,gBAChBlB,OAAA,CAACF,MAAM;cAAC4B,GAAG,EAAEd,SAAU;cAACC,OAAO,EAAEF,OAAQ;cAAAO,QAAA,EACtCF;YAAkB;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC,eACTzB,OAAA,CAACF,MAAM;cAAC6B,WAAW,EAAC,KAAK;cAACd,OAAO,EAAEA,OAAQ;cAACe,EAAE,EAAE,CAAE;cAAAV,QAAA,EAC/CD;YAAkB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eACd,CAAC;AAEP,CAAC,kCAAC;AAACI,GAAA,GA/CU1B,YAAuB;AAAA,IAAAE,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}