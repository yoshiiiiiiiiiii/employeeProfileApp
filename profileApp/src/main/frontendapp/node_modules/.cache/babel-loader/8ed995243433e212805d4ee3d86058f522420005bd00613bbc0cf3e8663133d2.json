{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRecoilState } from \"recoil\";\nimport { useMessage } from \"./useMessage\";\nimport { useCallback, useState } from \"react\";\nimport { EmployeeState } from \"../contexts/EmployeeState\";\nimport axios from \"axios\";\n\n/**\r\n * パスワード再設定処理関数\r\n * @returns editPassword:パスワード再設定処理 loading:処理中判定\r\n */\nexport const useEditPassword = () => {\n  _s();\n  const {\n    showMessage\n  } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const editPassword = useCallback(async () => {\n    setLoading(true);\n    await axios.post(\"/api/editPassword\", {\n      employeeId: employeeState,\n      oldPassword: oldPassword,\n      newPassword: newPassword\n    }).then(() => {\n      showMessage({\n        title: \"パスワードの再設定が完了しました\",\n        status: \"success\"\n      });\n      setLoading(false);\n      setOldPassword(\"\");\n      setNewPassword(\"\");\n    }).catch(() => {\n      showMessage({\n        title: \"パスワードの再設定が出来ませんでした。旧パスワードが間違っています\",\n        status: \"error\"\n      });\n      setLoading(false);\n      setOldPassword(\"\");\n      setNewPassword(\"\");\n    });\n  }, []);\n  return {\n    editPassword,\n    loading\n  };\n};\n_s(useEditPassword, \"Ndb32TMSLM/3ReZ4k2ypaZ0rMjU=\", false, function () {\n  return [useMessage, useRecoilState];\n});","map":{"version":3,"names":["useRecoilState","useMessage","useCallback","useState","EmployeeState","axios","useEditPassword","_s","showMessage","loading","setLoading","employeeState","setEmployeeState","oldPassword","setOldPassword","newPassword","setNewPassword","editPassword","post","employeeId","then","title","status","catch"],"sources":["/home/yoshintm/React/react-type-script-webapp/src/hooks/useEditPassword.ts"],"sourcesContent":["import { useRecoilState } from \"recoil\";\r\nimport { useMessage } from \"./useMessage\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { EmployeeState } from \"../contexts/EmployeeState\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * パスワード再設定処理関数\r\n * @returns editPassword:パスワード再設定処理 loading:処理中判定\r\n */\r\nexport const useEditPassword = () => {\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n  const [employeeState, setEmployeeState] = useRecoilState(EmployeeState);\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  const editPassword = useCallback(async () => {\r\n    setLoading(true);\r\n    await axios\r\n      .post(\"/api/editPassword\", {\r\n        employeeId: employeeState,\r\n        oldPassword: oldPassword,\r\n        newPassword: newPassword,\r\n      })\r\n      .then(() => {\r\n        showMessage({\r\n          title: \"パスワードの再設定が完了しました\",\r\n          status: \"success\",\r\n        });\r\n        setLoading(false);\r\n        setOldPassword(\"\");\r\n        setNewPassword(\"\");\r\n      })\r\n      .catch(() => {\r\n        showMessage({\r\n          title:\r\n            \"パスワードの再設定が出来ませんでした。旧パスワードが間違っています\",\r\n          status: \"error\",\r\n        });\r\n        setLoading(false);\r\n        setOldPassword(\"\");\r\n        setNewPassword(\"\");\r\n      });\r\n  }, []);\r\n\r\n  return { editPassword, loading };\r\n};\r\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,QAAQ;AACvC,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,aAAa,QAAQ,2BAA2B;AACzD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAY,CAAC,GAAGP,UAAU,CAAC,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,cAAc,CAACI,aAAa,CAAC;EACvE,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,YAAY,GAAGf,WAAW,CAAC,YAAY;IAC3CQ,UAAU,CAAC,IAAI,CAAC;IAChB,MAAML,KAAK,CACRa,IAAI,CAAC,mBAAmB,EAAE;MACzBC,UAAU,EAAER,aAAa;MACzBE,WAAW,EAAEA,WAAW;MACxBE,WAAW,EAAEA;IACf,CAAC,CAAC,CACDK,IAAI,CAAC,MAAM;MACVZ,WAAW,CAAC;QACVa,KAAK,EAAE,kBAAkB;QACzBC,MAAM,EAAE;MACV,CAAC,CAAC;MACFZ,UAAU,CAAC,KAAK,CAAC;MACjBI,cAAc,CAAC,EAAE,CAAC;MAClBE,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,CACDO,KAAK,CAAC,MAAM;MACXf,WAAW,CAAC;QACVa,KAAK,EACH,mCAAmC;QACrCC,MAAM,EAAE;MACV,CAAC,CAAC;MACFZ,UAAU,CAAC,KAAK,CAAC;MACjBI,cAAc,CAAC,EAAE,CAAC;MAClBE,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEC,YAAY;IAAER;EAAQ,CAAC;AAClC,CAAC;AAACF,EAAA,CArCWD,eAAe;EAAA,QACFL,UAAU,EAEQD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}